name: Docker Publish

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write   # <-- needed to push to GHCR

env:
  REGISTRY: ghcr.io
  IMAGE_OWNER: ${{ github.repository_owner }}
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # Only publish prod images
          - name: web
            context: ./web
            file: ./web/Dockerfile
            target: prod
          - name: api
            context: ./api
            file: ./api/Dockerfile
          - name: db
            context: ./db
            file: ./db/Dockerfile

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (optional, good for multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.REPO_NAME }}-${{ matrix.name }}
          tags: |
            type=raw,value=latest
            type=ref,event=tag
          labels: |
            org.opencontainers.image.source=${{ github.repository }}

      # Build & push (with target) for entries that specify one (web)
      - name: Build and push (with target)
        if: ${{ matrix.target != '' }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          target: ${{ matrix.target }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      # Build & push (no target) for single-stage Dockerfiles (api, db)
      - name: Build and push
        if: ${{ matrix.target == '' }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
